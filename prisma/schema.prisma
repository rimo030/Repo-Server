generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Board {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now()) @db.DateTime(6)
  updatedAt   DateTime  @default(now()) @db.DateTime(6)
  deletedAt   DateTime? @db.DateTime(6)
  buyerId     Int
  title       String    @db.VarChar(512)
  description String    @db.Text
  status      String    @db.VarChar(128)
  buyer       Buyer     @relation(fields: [buyerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Buyer {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now()) @db.DateTime(6)
  updatedAt   DateTime  @default(now()) @db.DateTime(6)
  deletedAt   DateTime? @db.DateTime(6)
  email       String    @unique() @db.VarChar(128)
  password    String    @db.VarChar(512)
  name        String    @db.VarChar(128)
  gender      Int       @db.TinyInt
  age         Int
  phone       String    @db.VarChar(11)
  boards      Board[]
  carts       Cart[]
  orders      Order[]
}

model Cart {
  id                    Int                    @id @default(autoincrement())
  createdAt             DateTime               @default(now()) @db.DateTime(6)
  updatedAt             DateTime               @default(now()) @db.DateTime(6)
  deletedAt             DateTime?              @db.DateTime(6)
  buyerId               Int
  productId             Int
  buyer                 Buyer                  @relation(fields: [buyerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product               Product                @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cartOptions           CartOption[]
  cartRequiredOptions   CartRequiredOption[]
  orderProducts         OrderProduct[]
}

model CartOption {
  id                Int            @id @default(autoincrement())
  createdAt         DateTime       @default(now()) @db.DateTime(6)
  updatedAt         DateTime       @default(now()) @db.DateTime(6)
  deletedAt         DateTime?      @db.DateTime(6)
  cartId            Int
  productOptionId   Int
  count             Int
  ProductOption     ProductOption  @relation(fields: [productOptionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  carts             Cart           @relation(fields: [cartId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model CartInputOption {
  id                      Int                   @id @default(autoincrement())
  createdAt               DateTime              @default(now()) @db.DateTime(6)
  updatedAt               DateTime              @default(now()) @db.DateTime(6)
  deletedAt               DateTime?             @db.DateTime(6)
  cartRequiredId          Int
  productInputOptionId    Int
  name                    String                @db.VarChar(128)
  value                   String                @db.VarChar(128)
  count                   Int
  cartRequiredOptionId    Int?
  cartRequiredOption      CartRequiredOption? @relation(fields: [cartRequiredOptionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  productInputOption      ProductInputOption  @relation(fields: [productInputOptionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model CartRequiredOption {
  id                          Int                         @id @default(autoincrement())
  createdAt                   DateTime                    @default(now()) @db.DateTime(6)
  updatedAt                   DateTime                    @default(now()) @db.DateTime(6)
  deletedAt                   DateTime?                   @db.DateTime(6)
  cartId                      Int
  productRequiredOptionId     Int
  count                       Int
  cartInputOptions            CartInputOption[]
  productRequiredOption       ProductRequiredOption       @relation(fields: [productRequiredOptionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cart                        Cart                        @relation(fields: [cartId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Category {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now()) @db.DateTime(6)
  updatedAt   DateTime  @default(now()) @db.DateTime(6)
  deletedAt   DateTime? @db.DateTime(6)
  name        String    @unique() @db.VarChar(128)
  products    Product[]
}

model Company {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now()) @db.DateTime(6)
  updatedAt   DateTime  @default(now()) @db.DateTime(6)
  deletedAt   DateTime? @db.DateTime(6)
  name        String    @db.VarChar(128)
  products    Product[]
}

model Order {
  id                    Int                    @id @default(autoincrement())
  createdAt             DateTime               @default(now()) @db.DateTime(6)
  updatedAt             DateTime               @default(now()) @db.DateTime(6)
  deletedAt             DateTime?              @db.DateTime(6)
  buyerId               Int
  buyer                 Buyer                  @relation(fields: [buyerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orderProductBundles   OrderProductBundle[]
}

model OrderProduct {
  id                              Int                             @id @default(autoincrement())
  createdAt                       DateTime                        @default(now()) @db.DateTime(6)
  updatedAt                       DateTime                        @default(now()) @db.DateTime(6)
  deletedAt                       DateTime?                       @db.DateTime(6)
  orderProductBundleId            Int
  cartId                          Int
  productId                       Int
  Product                         Product                         @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cart                            Cart                            @relation(fields: [cartId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orderProductBundle              OrderProductBundle              @relation(fields: [orderProductBundleId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orderProductOptions             OrderProductOption[]
  orderProductRequiredOptions     OrderProductRequiredOption[]
}

model OrderProductBundle {
  id              Int             @id @default(autoincrement())
  createdAt       DateTime        @default(now()) @db.DateTime(6)
  updatedAt       DateTime        @default(now()) @db.DateTime(6)
  deletedAt       DateTime?       @db.DateTime(6)
  orderId         Int
  bundleName      String          @db.VarChar(128)
  feeStandard     String          @db.VarChar(128)
  orderProducts   OrderProduct[]
  order           Order           @relation(fields: [orderId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model OrderProductInputOption {
  id                               Int                          @id @default(autoincrement())
  createdAt                       DateTime                      @default(now()) @db.DateTime(6)
  updatedAt                       DateTime                      @default(now()) @db.DateTime(6)
  deletedAt                       DateTime?                     @db.DateTime(6)
  orderProductRequiredOptionId    Int
  name                            String                        @db.VarChar(32)
  value                           Int
  count                           Int
  orderProductRequiredOption      OrderProductRequiredOption    @relation(fields: [orderProductRequiredOptionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model OrderProductOption {
  id                Int           @id @default(autoincrement())
  createdAt         DateTime      @default(now()) @db.DateTime(6)
  updatedAt         DateTime      @default(now()) @db.DateTime(6)
  deletedAt         DateTime?     @db.DateTime(6)
  orderProductId    Int
  name              String        @db.VarChar(128)
  price             Int
  count             Int
  orderProduct      OrderProduct  @relation(fields: [orderProductId], references: [id], onDelete: NoAction, onUpdate: NoAction)

}

model OrderProductRequiredOption {
  id                            Int                          @id @default(autoincrement())
  createdAt                     DateTime                     @default(now()) @db.DateTime(6)
  updatedAt                     DateTime                     @default(now()) @db.DateTime(6)
  deletedAt                     DateTime?                    @db.DateTime(6)
  orderProductId                Int
  name                          String                       @db.VarChar(128)
  price                         Int
  count                         Int
  orderProductInputOptions      OrderProductInputOption[]
  orderProduct                  OrderProduct                @relation(fields: [orderProductId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Product {
  id                        Int                       @id @default(autoincrement())
  createdAt                 DateTime                  @default(now()) @db.DateTime(6)
  updatedAt                 DateTime                  @default(now()) @db.DateTime(6)
  deletedAt                 DateTime?                 @db.DateTime(6)
  sellerId                  Int
  bundleId                  Int?
  categoryId                Int
  companyId                 Int
  isSale                    Int                       @db.TinyInt
  name                      String                    @db.VarChar(128)
  description               String?                   @db.VarChar(255)
  deliveryType              String                    @db.VarChar(128)
  deliveryFreeOver          Int?
  deliveryCharge            Int
  img                       String                    @db.VarChar(255)
  carts                     Cart[]
  orderProducts             OrderProduct[]
  category                  Category                  @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  seller                    Seller                    @relation(fields: [sellerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  company                   Company                   @relation(fields: [companyId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  productBundle             ProductBundle?            @relation(fields: [bundleId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  productOptions            ProductOption[]
  productRequiredOptions    ProductRequiredOption[]
}

model ProductBundle {
  id                Int       @id @default(autoincrement())
  createdAt         DateTime  @default(now()) @db.DateTime(6)
  updatedAt         DateTime  @default(now()) @db.DateTime(6)
  deletedAt         DateTime? @db.DateTime(6)
  sellerId          Int
  name              String    @db.VarChar(128)
  chargeStandard    String    @db.VarChar(128)
  products          Product[]
  seller            Seller    @relation(fields: [sellerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ProductInputOption {
  id                        Int                         @id @default(autoincrement())
  createdAt                 DateTime                    @default(now()) @db.DateTime(6)
  updatedAt                 DateTime                    @default(now()) @db.DateTime(6)
  deletedAt                 DateTime?                   @db.DateTime(6)
  productRequiredOptionId   Int
  name                      String                      @db.VarChar(128)
  value                     String                      @db.VarChar(128)
  description               String                      @db.VarChar(255)
  isRequired                Int                         @db.TinyInt
  cartInputOptions          CartInputOption[]
  productRequiredOption     ProductRequiredOption       @relation(fields: [productRequiredOptionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ProductOption {
  id              Int           @id @default(autoincrement())
  createdAt       DateTime      @default(now()) @db.DateTime(6)
  updatedAt       DateTime      @default(now()) @db.DateTime(6)
  deletedAt       DateTime?     @db.DateTime(6)
  productId       Int
  name            String        @db.VarChar(128)
  price           Int
  isSale          Int           @db.TinyInt
  cartOptions     CartOption[]
  product         Product       @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ProductRequiredOption {
  id                      Int                    @id @default(autoincrement())
  createdAt               DateTime               @default(now()) @db.DateTime(6)
  updatedAt               DateTime               @default(now()) @db.DateTime(6)
  deletedAt               DateTime?              @db.DateTime(6)
  productId               Int
  name                    String                 @db.VarChar(128)
  price                   Int
  isSale                  Int                    @db.TinyInt
  cartRequiredOptions     CartRequiredOption[]
  productInputOptions     ProductInputOption[]
  product                 Product                @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Seller {
  id                Int              @id @default(autoincrement())
  createdAt         DateTime         @default(now()) @db.DateTime(6)
  updatedAt         DateTime         @default(now()) @db.DateTime(6)
  deletedAt         DateTime?        @db.DateTime(6)
  email             String           @unique() @db.VarChar(128)
  password          String           @db.VarChar(512)
  name              String           @db.VarChar(32)
  phone             String           @db.VarChar(11)
  businessNumber    String           @db.VarChar(128)
  products          Product[]
  productBundles    ProductBundle[]
} 
